export declare const globalTheme: import("./createTheme.types").Compiled<import("./createTheme.types").Mixin<{
    radius: {
        sm: string;
        md: string;
        lg: string;
        xl: string;
        round: string;
        unstable_new: {
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
    font: {
        size: {
            xxl: string;
            xl: string;
            lg: string;
            md: string;
            sm: string;
            xs: string;
            xxs: string;
        };
        color: {
            base: string;
            primary: string;
            secondary: string;
        };
    };
    spacing: {
        xxs: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        xxl: string;
    };
    palette: {
        primary: string;
        contrastHigh: string;
        contrastLow: string;
        contrastInvert: string;
        surface: string;
        surfaceAlt: string;
        background: string;
        backgroundAlt: string;
        secondary: string;
        secondaryAlt: string;
        error: string;
        errorAlt: string;
        warning: string;
        warningAlt: string;
        success: string;
        successAlt: string;
        overlayLight: string;
        overlayLight2: string;
        overlayLight3: string;
        overlayDark: string;
        overlayDark2: string;
        overlayDark3: string;
        code: {
            accent1: string;
            accent2: string;
            accent3: string;
            accent4: string;
            accent5: string;
            accent6: string;
            accent7: string;
            accent8: string;
            accent9: string;
        };
        brand: {
            cloudinaryBlue: string;
            cloudinaryBlueLight: string;
            cloudinaryBlueDark: string;
            offsetGray: string;
            darkBlue: string;
            accentCoral: string;
            accentPeach: string;
            accentYellow: string;
            accentTurquoise: string;
            accentLightBlue: string;
        };
        dataVis: {
            accent1: string;
            accent2: string;
            accent3: string;
            accent4: string;
            accent5: string;
            accent6: string;
            accent7: string;
            accent8: string;
            accent9: string;
            accent10: string;
        };
    };
    shadow: {
        sm: string;
        md: string;
        lg: string;
    };
    globals: {
        font: {
            size: string;
            family: string;
            url: string;
        };
        focus: {
            color: string;
        };
        background: {
            color: string;
        };
    };
    color: {
        darkBlue: string;
        blue: string;
        lightBlue: string;
        lighterBlue: string;
        orange: string;
        lightOrange: string;
        lightGreen: string;
        green: string;
        darkGreen: string;
        lightRed: string;
        red: string;
        darkRed: string;
        purple: string;
        teal: string;
        lime: string;
        pink: string;
        yellow: string;
        brown: string;
        gray: string;
        cyan: string;
        olive: string;
        white: string;
        gray00: string;
        gray20: string;
        gray40: string;
        gray50: string;
        gray60: string;
        gray70: string;
        gray80: string;
        gray90: string;
        gray100: string;
        black: string;
    };
}>> & import("./createTheme.types").MappedChildren<{
    radius: {
        sm: string;
        md: string;
        lg: string;
        xl: string;
        round: string;
        unstable_new: {
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
    font: {
        size: {
            xxl: string;
            xl: string;
            lg: string;
            md: string;
            sm: string;
            xs: string;
            xxs: string;
        };
        color: {
            base: string;
            primary: string;
            secondary: string;
        };
    };
    spacing: {
        xxs: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        xxl: string;
    };
    palette: {
        primary: string;
        contrastHigh: string;
        contrastLow: string;
        contrastInvert: string;
        surface: string;
        surfaceAlt: string;
        background: string;
        backgroundAlt: string;
        secondary: string;
        secondaryAlt: string;
        error: string;
        errorAlt: string;
        warning: string;
        warningAlt: string;
        success: string;
        successAlt: string;
        overlayLight: string;
        overlayLight2: string;
        overlayLight3: string;
        overlayDark: string;
        overlayDark2: string;
        overlayDark3: string;
        code: {
            accent1: string;
            accent2: string;
            accent3: string;
            accent4: string;
            accent5: string;
            accent6: string;
            accent7: string;
            accent8: string;
            accent9: string;
        };
        brand: {
            cloudinaryBlue: string;
            cloudinaryBlueLight: string;
            cloudinaryBlueDark: string;
            offsetGray: string;
            darkBlue: string;
            accentCoral: string;
            accentPeach: string;
            accentYellow: string;
            accentTurquoise: string;
            accentLightBlue: string;
        };
        dataVis: {
            accent1: string;
            accent2: string;
            accent3: string;
            accent4: string;
            accent5: string;
            accent6: string;
            accent7: string;
            accent8: string;
            accent9: string;
            accent10: string;
        };
    };
    shadow: {
        sm: string;
        md: string;
        lg: string;
    };
    globals: {
        font: {
            size: string;
            family: string;
            url: string;
        };
        focus: {
            color: string;
        };
        background: {
            color: string;
        };
    };
    color: {
        darkBlue: string;
        blue: string;
        lightBlue: string;
        lighterBlue: string;
        orange: string;
        lightOrange: string;
        lightGreen: string;
        green: string;
        darkGreen: string;
        lightRed: string;
        red: string;
        darkRed: string;
        purple: string;
        teal: string;
        lime: string;
        pink: string;
        yellow: string;
        brown: string;
        gray: string;
        cyan: string;
        olive: string;
        white: string;
        gray00: string;
        gray20: string;
        gray40: string;
        gray50: string;
        gray60: string;
        gray70: string;
        gray80: string;
        gray90: string;
        gray100: string;
        black: string;
    };
}> & {
    [idField]: import("../types").ThemeId;
};
export declare type GlobalTheme = ReturnType<typeof globalTheme>;
