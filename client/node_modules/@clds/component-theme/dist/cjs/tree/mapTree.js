"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mapTree = void 0;
const isParent_1 = require("../utils/isParent");
const mapTree = (node, mapper, currentPath, mapParents = false, nodeFactory = () => undefined) => {
    const nodeIsParent = (0, isParent_1.isParent)(node);
    const nodeIsLeaf = !nodeIsParent;
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
    const mappedNode = mapParents || nodeIsLeaf ? mapper(node, currentPath || '') : {};
    Object.assign(mappedNode, nodeFactory(currentPath || ''));
    if (nodeIsParent) {
        for (const key in node) {
            // istanbul ignore else
            if (Object.prototype.hasOwnProperty.call(node, key)) {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
                mappedNode[key] = (0, exports.mapTree)(node[key], mapper, currentPath ? currentPath + '.' + key : key, mapParents, nodeFactory);
            }
        }
    }
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return mappedNode;
};
exports.mapTree = mapTree;
//# sourceMappingURL=mapTree.js.map