const fs = require('fs');
const path = require('path');

const iconFilePath = path.join(__dirname, '../src/template/index-icons.tsx');
const storiesFilePath = path.join(__dirname, '../stories/Icons.stories.mdx');

async function writeIconographyStories(file: string) {
  return new Promise((resolve) => {
    let icons: Array<string> = [];
    const stream = fs.createReadStream(file, { encoding: 'utf8' });
    stream.on('data', (data: string) => {
      const currentIcons = data
        // split into lines using new lines
        .split('\n')
        // Get only export lines
        .filter((line) => line.includes('export const'))
        // Get only the icon names
        .map((line) =>
          line.replace('export const ', '').replace(/ = createIcon.+/, ''),
        )
        .sort();

      icons = [...icons, ...currentIcons];
    });

    stream.on('close', () => {
      const mapToList = icons.map((icon) => `${icon}`).join(',\n  ');

      const mapToMdx = icons
        .map((icon) => `  <IconItem name="${icon}"><${icon} /></IconItem>`)
        .join('\n');

      const storyContent = `import { Meta, IconGallery, IconItem } from '@storybook/addon-docs';

import {
${mapToList}
} from '../src'

<Meta title="Iconography/Icons" />

# Icons



<IconGallery>
${mapToMdx}
</IconGallery>`;

      const writeStream = fs.createWriteStream(storiesFilePath);
      writeStream.write(storyContent);
      writeStream.end();

      console.log('Updated Iconography');

      stream.destroy();
      resolve(null);
    });
  });
}

void writeIconographyStories(iconFilePath);
