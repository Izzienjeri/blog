export declare const appsTheme: import("@clds/component-theme/src/api/createTheme.types").Compiled<import("@clds/component-theme").Mixin<{
    xxl: {
        size: string;
        lineHeight: string;
        contrastInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        regular: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlay: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlayInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
    };
    xl: {
        size: string;
        lineHeight: string;
        contrastInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        regular: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlay: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlayInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
    };
    lg: {
        size: string;
        lineHeight: string;
        highContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        lowContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        url: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        contrastInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        regular: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlay: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlayInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
    };
    md: {
        size: string;
        lineHeight: string;
        highContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        lowContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        regular: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        url: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        contrastInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        error: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        warning: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        success: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlay: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlayInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
    };
    sm: {
        size: string;
        lineHeight: string;
        highContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        regular: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        lowContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        url: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        success: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        warning: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        error: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        contrastInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlay: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlayInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
    };
    xs: {
        size: string;
        lineHeight: string;
        highContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        regular: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        lowContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        disabled: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        url: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        success: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        warning: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        error: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        contrastInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlay: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlayInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
    };
    xxs: {
        size: string;
        lineHeight: string;
        highContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        lowContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        regular: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        disabled: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        url: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        success: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        warning: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        error: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        contrastInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlay: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlayInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
    };
}>> & import("@clds/component-theme/src/api/createTheme.types").MappedChildren<{
    xxl: {
        size: string;
        lineHeight: string;
        contrastInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        regular: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlay: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlayInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
    };
    xl: {
        size: string;
        lineHeight: string;
        contrastInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        regular: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlay: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlayInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
    };
    lg: {
        size: string;
        lineHeight: string;
        highContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        lowContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        url: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        contrastInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        regular: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlay: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlayInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
    };
    md: {
        size: string;
        lineHeight: string;
        highContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        lowContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        regular: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        url: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        contrastInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        error: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        warning: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        success: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlay: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlayInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
    };
    sm: {
        size: string;
        lineHeight: string;
        highContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        regular: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        lowContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        url: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        success: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        warning: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        error: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        contrastInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlay: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlayInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
    };
    xs: {
        size: string;
        lineHeight: string;
        highContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        regular: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        lowContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        disabled: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        url: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        success: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        warning: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        error: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        contrastInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlay: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlayInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
    };
    xxs: {
        size: string;
        lineHeight: string;
        highContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        lowContrast: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        regular: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        disabled: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        url: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        success: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        warning: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        error: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        contrastInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlay: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
        overlayInvert: {
            color: import("@clds/component-theme").Mixin<string>;
            weight: string;
        };
    };
}> & {
    [idField]: import("@clds/component-theme/src/types").ThemeId;
};
