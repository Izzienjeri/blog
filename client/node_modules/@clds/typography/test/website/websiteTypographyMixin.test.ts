import { expect } from 'chai';

import { websiteTypographyMixin } from '../../src/website/websiteTypographyMixin';

describe('websiteTypographyMixin', () => {
  it('should should throw error on unsupported size', () => {
    expect(() =>
      websiteTypographyMixin('brandText', 'xxxxl', 'regular'),
    ).to.throw('xxxxl size is not supported for website/brandText typography');
  });

  it('should should throw error on unsupported type', () => {
    expect(() =>
      websiteTypographyMixin('headlines', 'xxxxl', 'accentCoral'),
    ).to.throw(
      'accentCoral type is not supported for website/headlines/xxxxl typography',
    );
  });

  /**
   * This test checks if typography returned proper styled tagged literal with proper typography component mixins
   */
  it.skip('should return styled mixin with proper theme values', () => {
    const css = websiteTypographyMixin('headlines', 'xl', 'contrastInvert');

    expect(css.map(String)).to.have.members([
      'mixins.headlines.fontFamily',
      'mixins.headlines.xl.fontSize',
      'mixins.headlines.xl.lineHeight',
      'mixins.headlines.xl.contrastInvert.color',
      'mixins.headlines.xl.contrastInvert.fontWeight',
    ]);

    const css2 = websiteTypographyMixin('brandText', 'lg', 'regular');
    expect(css2.map(String)).to.have.members([
      'mixins.brandText.fontFamily',
      'mixins.brandText.lg.fontSize',
      'mixins.brandText.lg.lineHeight',
      'mixins.brandText.lg.regular.color',
      'mixins.brandText.lg.regular.fontWeight',
    ]);
  });
});
