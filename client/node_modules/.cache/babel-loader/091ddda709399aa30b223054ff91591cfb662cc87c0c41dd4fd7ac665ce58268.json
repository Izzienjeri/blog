{"ast":null,"code":"var _jsxFileName = \"/home/angela/Development/code/flask/blog_app_project/client/src/components/UpdateUser.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateUser = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [fileUpload, setFileUpload] = useState(null);\n  const [image, setImage] = useState(null);\n  const formData = new FormData();\n  formData.append(\"file\", fileUpload);\n  formData.append(\"description\", \"\");\n  const formik = useFormik({\n    initialValues: {\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      postPassword(values);\n      resetForm();\n    }\n  });\n  function postPassword(data) {\n    fetch('/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + retrieve().access_token\n      },\n      body: JSON.stringify(data)\n    }).then(resp => resp.json()).then(data => {\n      setUserData(data);\n    });\n  }\n  const handleChange = e => {\n    const file = e.target.files[0];\n    setFileUpload(file);\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setImage(reader.result);\n      console.log(reader.result);\n    };\n  };\n  const handlePhotoSubmit = e => {\n    e.preventDefault();\n    fetch('/upload_profileImage', {\n      method: 'POST',\n      body: formData\n    }).then(resp => resp.json()).then(data => {\n      setImage(data);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Current Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          name: \"password\",\n          type: \"password\",\n          onChange: formik.handleChange,\n          value: formik.values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"confirmPassword\",\n          name: \"confirmPassword\",\n          type: \"password\",\n          onChange: formik.handleChange,\n          value: formik.values.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePhotoSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: \"Upload Photo Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          onChange: e => handleChange(e),\n          required: true,\n          accept: \"image/png,image/jpeg,image/jpg,image/jfif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateUser, \"+eF6MN+opfUH+Rab6acWY7mPZj4=\", false, function () {\n  return [useFormik];\n});\n_c = UpdateUser;\nexport default UpdateUser;\nvar _c;\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"names":["React","useFormik","useState","jsxDEV","_jsxDEV","UpdateUser","_s","userData","setUserData","fileUpload","setFileUpload","image","setImage","formData","FormData","append","formik","initialValues","password","confirmPassword","onSubmit","values","resetForm","postPassword","data","fetch","method","headers","retrieve","access_token","body","JSON","stringify","then","resp","json","handleChange","e","file","target","files","reader","FileReader","readAsDataURL","onloadend","result","console","log","handlePhotoSubmit","preventDefault","children","handleSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","name","type","onChange","value","required","accept","src","alt","_c","$RefreshReg$"],"sources":["/home/angela/Development/code/flask/blog_app_project/client/src/components/UpdateUser.js"],"sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport { useState } from 'react';\n\nconst UpdateUser = () => {\n    const [userData, setUserData] = useState(null);\n    const [fileUpload, setFileUpload] = useState(null);\n    const [image, setImage] = useState(null);\n    const formData = new FormData();\n\n    formData.append(\"file\", fileUpload);\n    formData.append(\"description\", \"\");\n\n    const formik = useFormik({\n        initialValues: {\n            password: \"\",\n            confirmPassword: \"\",\n        },\n        onSubmit: (values, { resetForm }) => {\n            postPassword(values);\n            resetForm();\n        },\n    });\n\n    function postPassword(data) {\n        fetch('/users', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\":\"Bearer \"+ retrieve().access_token\n                \n            },\n            body: JSON.stringify(data),\n        })\n            .then((resp) => resp.json())\n            .then((data) => {\n                setUserData(data);\n            });\n    }\n\n    const handleChange = (e) => {\n        const file = e.target.files[0];\n        setFileUpload(file);\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n\n        reader.onloadend = () => {\n            setImage(reader.result);\n            console.log(reader.result);\n        };\n    };\n\n    const handlePhotoSubmit = (e) => {\n        e.preventDefault();\n        fetch('/upload_profileImage', {\n            method: 'POST',\n            body: formData,\n        })\n            .then((resp) => resp.json())\n            .then((data) => {\n                setImage(data);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={formik.handleSubmit}>\n                <div>\n                    <label htmlFor=\"password\">Current Password</label>\n                    <br />\n                    <input\n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        onChange={formik.handleChange}\n                        value={formik.values.password}\n                    />\n                </div>\n\n                <div>\n                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                    <br />\n                    <input\n                        id=\"confirmPassword\"\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        onChange={formik.handleChange}\n                        value={formik.values.confirmPassword}\n                    />\n                </div>\n\n                <button type=\"submit\">Update</button>\n            </form>\n\n            <form onSubmit={handlePhotoSubmit}>\n                <div>\n                    <label htmlFor=\"fileInput\">Upload Photo Here</label>\n                    <input\n                        type=\"file\"\n                        id=\"file\"\n                        onChange={(e) => handleChange(e)}\n                        required\n                        accept=\"image/png,image/jpeg,image/jpg,image/jfif\"\n                    />\n                    <img src={image} alt=\"\" />\n                </div>\n\n                <button type=\"submit\">Save</button>\n            </form>\n        </div>\n    );\n};\n\nexport default UpdateUser;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}