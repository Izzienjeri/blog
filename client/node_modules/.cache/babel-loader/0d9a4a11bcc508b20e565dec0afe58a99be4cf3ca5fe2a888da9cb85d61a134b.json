{"ast":null,"code":"import { css } from 'styled-components';\nimport { appsTheme } from './theme';\nexport const getTypographyRuleMixins = (size, type) => {\n  const sizeBranch = appsTheme[size];\n  if (!size || !type) {\n    throw new Error(`Apps typography: type ${type} and size ${size} is not valid configuration`);\n  }\n  if (!(type in sizeBranch)) {\n    throw new Error(`Apps typography: ${type} variant is not supported for ${size} typography`);\n  }\n  const variantBranch = sizeBranch[type];\n  return {\n    fontSize: sizeBranch.size,\n    lineHeight: sizeBranch.lineHeight,\n    color: variantBranch.color,\n    fontWeight: variantBranch.weight\n  };\n};\nconst isProps = (arg1, arg2) => {\n  return arg1 !== undefined && arg2 === undefined;\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function typographyMixin(arg1, arg2) {\n  const size = isProps(arg1, arg2) ? arg1.size : arg1;\n  const type = isProps(arg1, arg2) ? arg1.type : arg2;\n  const mixins = getTypographyRuleMixins(size, type);\n  return css`\n    font-size: ${mixins.fontSize};\n    line-height: ${mixins.lineHeight};\n    color: ${mixins.color};\n    font-weight: ${mixins.fontWeight};\n  `;\n}","map":{"version":3,"names":["css","appsTheme","getTypographyRuleMixins","size","type","sizeBranch","Error","variantBranch","fontSize","lineHeight","color","fontWeight","weight","isProps","arg1","arg2","undefined","typographyMixin","mixins"],"sources":["/home/angela/Development/code/flask/blog_app_project/client/node_modules/@clds/typography/src/apps/typographyMixin.tsx"],"sourcesContent":["import { css, SimpleInterpolation } from 'styled-components';\n\nimport { appsTheme } from './theme';\nimport { TypographyProps, TypographySize, TypographyType } from './types';\n\nexport const getTypographyRuleMixins = (\n  size: TypographySize,\n  type: TypographyType,\n) => {\n  const sizeBranch = appsTheme[size];\n\n  if (!size || !type) {\n    throw new Error(\n      `Apps typography: type ${type} and size ${size} is not valid configuration`,\n    );\n  }\n\n  if (!(type in sizeBranch)) {\n    throw new Error(\n      `Apps typography: ${type} variant is not supported for ${size} typography`,\n    );\n  }\n  const variantBranch =\n    sizeBranch[type as Extract<keyof typeof sizeBranch, TypographyType>];\n\n  return {\n    fontSize: sizeBranch.size,\n    lineHeight: sizeBranch.lineHeight,\n    color: variantBranch.color,\n    fontWeight: variantBranch.weight,\n  };\n};\n\nconst isProps = (arg1: unknown, arg2: unknown): arg1 is TypographyProps => {\n  return arg1 !== undefined && arg2 === undefined;\n};\n\n/* eslint-disable no-redeclare */\nexport function typographyMixin(\n  props: TypographyProps,\n): ReadonlyArray<SimpleInterpolation>;\nexport function typographyMixin(\n  size: TypographySize,\n  type: TypographyType,\n): ReadonlyArray<SimpleInterpolation>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function typographyMixin(arg1: any, arg2?: any) {\n  const size = isProps(arg1, arg2) ? arg1.size : (arg1 as TypographySize);\n  const type = isProps(arg1, arg2) ? arg1.type : (arg2 as TypographyType);\n\n  const mixins = getTypographyRuleMixins(size, type);\n\n  return css`\n    font-size: ${mixins.fontSize};\n    line-height: ${mixins.lineHeight};\n    color: ${mixins.color};\n    font-weight: ${mixins.fontWeight};\n  `;\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAA6B,mBAAmB;AAE5D,SAASC,SAAS,QAAQ,SAAS;AAGnC,OAAO,MAAMC,uBAAuB,GAAGA,CACrCC,IAAoB,EACpBC,IAAoB,KAClB;EACF,MAAMC,UAAU,GAAGJ,SAAS,CAACE,IAAI,CAAC;EAElC,IAAI,CAACA,IAAI,IAAI,CAACC,IAAI,EAAE;IAClB,MAAM,IAAIE,KAAK,CACb,yBAAyBF,IAAI,aAAaD,IAAI,6BAA6B,CAC5E;;EAGH,IAAI,EAAEC,IAAI,IAAIC,UAAU,CAAC,EAAE;IACzB,MAAM,IAAIC,KAAK,CACb,oBAAoBF,IAAI,iCAAiCD,IAAI,aAAa,CAC3E;;EAEH,MAAMI,aAAa,GACjBF,UAAU,CAACD,IAAwD,CAAC;EAEtE,OAAO;IACLI,QAAQ,EAAEH,UAAU,CAACF,IAAI;IACzBM,UAAU,EAAEJ,UAAU,CAACI,UAAU;IACjCC,KAAK,EAAEH,aAAa,CAACG,KAAK;IAC1BC,UAAU,EAAEJ,aAAa,CAACK;GAC3B;AACH,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,IAAa,EAAEC,IAAa,KAA6B;EACxE,OAAOD,IAAI,KAAKE,SAAS,IAAID,IAAI,KAAKC,SAAS;AACjD,CAAC;AAUD;AACA,OAAM,SAAUC,eAAeA,CAACH,IAAS,EAAEC,IAAU;EACnD,MAAMZ,IAAI,GAAGU,OAAO,CAACC,IAAI,EAAEC,IAAI,CAAC,GAAGD,IAAI,CAACX,IAAI,GAAIW,IAAuB;EACvE,MAAMV,IAAI,GAAGS,OAAO,CAACC,IAAI,EAAEC,IAAI,CAAC,GAAGD,IAAI,CAACV,IAAI,GAAIW,IAAuB;EAEvE,MAAMG,MAAM,GAAGhB,uBAAuB,CAACC,IAAI,EAAEC,IAAI,CAAC;EAElD,OAAOJ,GAAG;iBACKkB,MAAM,CAACV,QAAQ;mBACbU,MAAM,CAACT,UAAU;aACvBS,MAAM,CAACR,KAAK;mBACNQ,MAAM,CAACP,UAAU;GACjC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}