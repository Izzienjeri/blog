{"ast":null,"code":"import { isParent } from '../utils/isParent';\nexport const mapTree = (node, mapper, currentPath, mapParents = false, nodeFactory = () => undefined) => {\n  const nodeIsParent = isParent(node);\n  const nodeIsLeaf = !nodeIsParent;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const mappedNode = mapParents || nodeIsLeaf ? mapper(node, currentPath || '') : {};\n  Object.assign(mappedNode, nodeFactory(currentPath || ''));\n  if (nodeIsParent) {\n    for (const key in node) {\n      // istanbul ignore else\n      if (Object.prototype.hasOwnProperty.call(node, key)) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        mappedNode[key] = mapTree(node[key], mapper, currentPath ? currentPath + '.' + key : key, mapParents, nodeFactory);\n      }\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return mappedNode;\n};","map":{"version":3,"names":["isParent","mapTree","node","mapper","currentPath","mapParents","nodeFactory","undefined","nodeIsParent","nodeIsLeaf","mappedNode","Object","assign","key","prototype","hasOwnProperty","call"],"sources":["/home/angela/Development/code/flask/blog_app_project/client/node_modules/@clds/component-theme/src/tree/mapTree.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/prefer-nullish-coalescing */\nimport { MappedNode, NodeMapper } from './mapTree.types';\nimport { Node } from '../types';\nimport { isParent } from '../utils/isParent';\n\ntype NodeFactory = (currentPath: string) => Record<string, unknown> | undefined;\n\nexport const mapTree = <\n  NodeType extends Node,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  MapperType extends NodeMapper<any>,\n>(\n  node: NodeType,\n  mapper: MapperType,\n  currentPath?: string,\n  mapParents = false,\n  nodeFactory: NodeFactory = () => undefined,\n): MappedNode<NodeType, ReturnType<MapperType>> => {\n  const nodeIsParent = isParent(node);\n  const nodeIsLeaf = !nodeIsParent;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const mappedNode =\n    mapParents || nodeIsLeaf ? mapper(node, currentPath || '') : {};\n  Object.assign(mappedNode, nodeFactory(currentPath || ''));\n\n  if (nodeIsParent) {\n    for (const key in node) {\n      // istanbul ignore else\n      if (Object.prototype.hasOwnProperty.call(node, key)) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        mappedNode[key] = mapTree(\n          node[key],\n          mapper,\n          currentPath ? currentPath + '.' + key : key,\n          mapParents,\n          nodeFactory,\n        );\n      }\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return mappedNode as MappedNode<NodeType, ReturnType<MapperType>>;\n};\n"],"mappings":"AAGA,SAASA,QAAQ,QAAQ,mBAAmB;AAI5C,OAAO,MAAMC,OAAO,GAAGA,CAKrBC,IAAc,EACdC,MAAkB,EAClBC,WAAoB,EACpBC,UAAU,GAAG,KAAK,EAClBC,WAAA,GAA2BA,CAAA,KAAMC,SAAS,KACM;EAChD,MAAMC,YAAY,GAAGR,QAAQ,CAACE,IAAI,CAAC;EACnC,MAAMO,UAAU,GAAG,CAACD,YAAY;EAChC;EACA,MAAME,UAAU,GACdL,UAAU,IAAII,UAAU,GAAGN,MAAM,CAACD,IAAI,EAAEE,WAAW,IAAI,EAAE,CAAC,GAAG,EAAE;EACjEO,MAAM,CAACC,MAAM,CAACF,UAAU,EAAEJ,WAAW,CAACF,WAAW,IAAI,EAAE,CAAC,CAAC;EAEzD,IAAII,YAAY,EAAE;IAChB,KAAK,MAAMK,GAAG,IAAIX,IAAI,EAAE;MACtB;MACA,IAAIS,MAAM,CAACG,SAAS,CAACC,cAAc,CAACC,IAAI,CAACd,IAAI,EAAEW,GAAG,CAAC,EAAE;QACnD;QACAH,UAAU,CAACG,GAAG,CAAC,GAAGZ,OAAO,CACvBC,IAAI,CAACW,GAAG,CAAC,EACTV,MAAM,EACNC,WAAW,GAAGA,WAAW,GAAG,GAAG,GAAGS,GAAG,GAAGA,GAAG,EAC3CR,UAAU,EACVC,WAAW,CACZ;;;;EAKP;EACA,OAAOI,UAA0D;AACnE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}