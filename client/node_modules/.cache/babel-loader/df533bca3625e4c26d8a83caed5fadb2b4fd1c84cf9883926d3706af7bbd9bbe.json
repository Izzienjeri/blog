{"ast":null,"code":"var _jsxFileName = \"/home/angela/Development/code/flask/blog_app_project/client/src/components/UpdatePost.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePost = ({\n  blogPosts,\n  setBlogPosts\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [updatedPost, setUpdatedPost] = useState({\n    title: \"\",\n    excerpt: \"\",\n    content: \"\"\n  });\n  const handleEditClick = () => {\n    // Assuming postId should be obtained from the updatedPost object\n    const postId = updatedPost.id; // Modify this line based on your data structure\n\n    const updatePosts = blogPosts.map(post => post.id === postId ? {\n      ...post,\n      ...updatedPost\n    } : post);\n    fetch(`/blogs/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updatePosts.find(post => post.id === postId))\n    }).then(resp => resp.json()).then(() => {\n      setBlogPosts(updatePosts);\n      setUpdatedPost({\n        title: \"\",\n        excerpt: \"\",\n        content: \"\"\n      });\n    }).catch(error => {\n      console.error(\"Error updating post:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit_post\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"title\",\n      name: \"title\",\n      type: \"text\",\n      value: updatedPost.title,\n      onChange: e => setUpdatedPost({\n        ...updatedPost,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"excerpt\",\n      name: \"excerpt\",\n      type: \"text\",\n      value: updatedPost.excerpt,\n      onChange: e => setUpdatedPost({\n        ...updatedPost,\n        excerpt: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"content\",\n      name: \"content\",\n      type: \"text\",\n      value: updatedPost.content,\n      onChange: e => setUpdatedPost({\n        ...updatedPost,\n        content: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditClick,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdatePost, \"WJye6egHHl/jIYM/QNdIagVNSaA=\", false, function () {\n  return [useParams];\n});\n_c = UpdatePost;\nexport default UpdatePost;\nvar _c;\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","UpdatePost","blogPosts","setBlogPosts","_s","id","updatedPost","setUpdatedPost","title","excerpt","content","handleEditClick","postId","updatePosts","map","post","fetch","method","headers","body","JSON","stringify","find","then","resp","json","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/angela/Development/code/flask/blog_app_project/client/src/components/UpdatePost.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst UpdatePost = ({ blogPosts, setBlogPosts }) => {\n    const { id } = useParams();\n    const [updatedPost, setUpdatedPost] = useState({\n        title: \"\",\n        excerpt: \"\",\n        content: \"\",\n    });\n\n    const handleEditClick = () => {\n        // Assuming postId should be obtained from the updatedPost object\n        const postId = updatedPost.id; // Modify this line based on your data structure\n\n        const updatePosts = blogPosts.map((post) =>\n            post.id === postId ? { ...post, ...updatedPost } : post\n        );\n\n        fetch(`/blogs/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(updatePosts.find((post) => post.id === postId)),\n        })\n            .then((resp) => resp.json())\n            .then(() => {\n                setBlogPosts(updatePosts);\n                setUpdatedPost({\n                    title: \"\",\n                    excerpt: \"\",\n                    content: \"\",\n                });\n            })\n            .catch((error) => {\n                console.error(\"Error updating post:\", error);\n            });\n    };\n\n    return (\n        <div className='edit_post'>\n            <label>Title</label>\n            <input\n                id=\"title\"\n                name=\"title\"\n                type=\"text\"\n                value={updatedPost.title}\n                onChange={(e) => setUpdatedPost({ ...updatedPost, title: e.target.value })}\n            />\n             <label></label>\n            <input\n                id=\"excerpt\"\n                name=\"excerpt\"\n                type=\"text\"\n                value={updatedPost.excerpt}\n                onChange={(e) => setUpdatedPost({ ...updatedPost, excerpt: e.target.value })}\n            />\n            <input\n                id=\"content\"\n                name=\"content\"\n                type=\"text\"\n                value={updatedPost.content}\n                onChange={(e) => setUpdatedPost({ ...updatedPost, content: e.target.value })}\n            />\n            <button onClick={handleEditClick}>Save</button>\n        </div>\n    );\n};\n\nexport default UpdatePost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}