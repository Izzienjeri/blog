{"ast":null,"code":"var _jsxFileName = \"/home/angela/Development/code/flask/blog_app_project/client/src/components/UpdatePost.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePost = ({\n  post\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [updatedPost, setUpdatedPost] = useState({\n    title: post.title,\n    excerpt: post.excerpt,\n    content: post.content\n  });\n  const handleEditClick = () => {\n    fetch(`/blogs/${post.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(post)\n    }).then(resp => resp.json()).then(() => {\n      const updatedPosts = [...blogPosts];\n      updatedPosts[updatedPostIndex] = updatedPostData;\n      setBlogPosts(updatedPosts);\n      setUpdatedPost({\n        title: \"\",\n        excerpt: \"\",\n        content: \"\"\n      });\n    }).catch(error => {\n      console.error(\"Error updating post:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit_post\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"title\",\n      name: \"title\",\n      type: \"text\",\n      value: updatedPost.title,\n      onChange: e => setUpdatedPost({\n        ...updatedPost,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Excerpt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"excerpt\",\n      name: \"excerpt\",\n      type: \"text\",\n      value: updatedPost.excerpt,\n      onChange: e => setUpdatedPost({\n        ...updatedPost,\n        excerpt: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"content\",\n      name: \"content\",\n      type: \"text\",\n      value: updatedPost.content,\n      onChange: e => setUpdatedPost({\n        ...updatedPost,\n        content: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleEditClick(),\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdatePost, \"4aTyCH2uSXb2joc5RTyiUH25mKs=\", false, function () {\n  return [useParams];\n});\n_c = UpdatePost;\nexport default UpdatePost;\nvar _c;\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","UpdatePost","post","_s","id","updatedPost","setUpdatedPost","title","excerpt","content","handleEditClick","fetch","method","headers","body","JSON","stringify","then","resp","json","updatedPosts","blogPosts","updatedPostIndex","updatedPostData","setBlogPosts","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/angela/Development/code/flask/blog_app_project/client/src/components/UpdatePost.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst UpdatePost = ({ post }) => {\n  const { id } = useParams();\n  const [updatedPost, setUpdatedPost] = useState({\n    title: post.title,\n    excerpt: post.excerpt,\n    content: post.content,\n  });\n\n  const handleEditClick = () => {\n    fetch(`/blogs/${post.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(post),\n    })\n      .then((resp) => resp.json())\n      .then(() => {\n        const updatedPosts = [...blogPosts];\n        updatedPosts[updatedPostIndex] = updatedPostData;\n        setBlogPosts(updatedPosts);\n        setUpdatedPost({\n          title: \"\",\n          excerpt: \"\",\n          content: \"\",\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error updating post:\", error);\n      });\n  };\n\n  return (\n    <div className=\"edit_post\">\n      <label>Title</label>\n      <input\n        id=\"title\"\n        name=\"title\"\n        type=\"text\"\n        value={updatedPost.title}\n        onChange={(e) =>\n          setUpdatedPost({ ...updatedPost, title: e.target.value })\n        }\n      />\n      <label>Excerpt</label>\n      <input\n        id=\"excerpt\"\n        name=\"excerpt\"\n        type=\"text\"\n        value={updatedPost.excerpt}\n        onChange={(e) =>\n          setUpdatedPost({ ...updatedPost, excerpt: e.target.value })\n        }\n      />\n      <label>Content</label>\n      <input\n        id=\"content\"\n        name=\"content\"\n        type=\"text\"\n        value={updatedPost.content}\n        onChange={(e) =>\n          setUpdatedPost({ ...updatedPost, content: e.target.value })\n        }\n      />\n      <button onClick={() => handleEditClick()}>Save</button>\n    </div>\n  );\n};\n\nexport default UpdatePost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}