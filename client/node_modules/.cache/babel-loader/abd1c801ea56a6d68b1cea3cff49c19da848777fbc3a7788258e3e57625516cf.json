{"ast":null,"code":"import { __rest } from \"tslib\";\n/* eslint-disable max-len */\nimport { Component, createElement } from 'react';\nimport styled from 'styled-components';\nconst layoutIcons = new Map();\nconst paddingByIconSize = {\n  18: 1,\n  24: 4,\n  36: 3,\n  48: 0\n};\nconst createLayoutIcon = iconComponent => styled(iconComponent)`\n    width: ${props => Number(props.iconSize) + 2 * paddingByIconSize[props.iconSize]}px;\n    height: ${props => Number(props.iconSize) + 2 * paddingByIconSize[props.iconSize]}px;\n    padding: ${props => paddingByIconSize[props.iconSize]}px;\n  `;\nexport const getMemoizedLayoutIcon = iconComponent => {\n  if (!layoutIcons.has(iconComponent)) {\n    const newIcon = createLayoutIcon(iconComponent);\n    layoutIcons.set(iconComponent, newIcon);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return layoutIcons.get(iconComponent);\n};\n/**\n * Component that tweaks existing icon components.\n * It resizes icons to match industry standard size and adds extra padding in order to align with\n * design system layout tokens.\n * @experimental Use it carefully, please report any feedback to #design-system channel.\n * Please note that this may break the layout if non-standard spacing is provided in the theme.\n * @param iconComponent the original icon component to tweak. All props will be passed to it.\n */\n// eslint-disable-next-line react/prefer-stateless-function\nexport class LayoutIcon extends Component {\n  /**\n   * If you wonder why this is an old-fashioned class function, it is due to styled components:\n   * https://github.com/styled-components/styled-components/blob/061736aa6dbaf8e21168db1c07bb2d061d9f2546/packages/styled-components/src/utils/checkDynamicCreation.ts#L35\n   * They warn about dynamic component creation to early prevent common mistake that developers make.\n   * We want to create them lazily (with memoization) since we don't want to depend statically on any icon.\n   * We also don't want to affect official API since this component is experimental only.\n   */\n  render() {\n    const _a = this.props,\n      {\n        iconComponent\n      } = _a,\n      rest = __rest(_a, [\"iconComponent\"]);\n    return createElement(getMemoizedLayoutIcon(iconComponent), rest);\n  }\n}","map":{"version":3,"names":["Component","createElement","styled","layoutIcons","Map","paddingByIconSize","createLayoutIcon","iconComponent","props","Number","iconSize","getMemoizedLayoutIcon","has","newIcon","set","get","LayoutIcon","render","_a","rest","__rest"],"sources":["/home/angela/Development/code/flask/blog_app_project/client/node_modules/@clds/icon/src/impl/LayoutIcon.tsx"],"sourcesContent":["/* eslint-disable max-len */\nimport { Component, ComponentType, createElement } from 'react';\nimport styled from 'styled-components';\n\nimport { IconProps } from './types';\n\nconst layoutIcons = new Map<\n  ComponentType<IconProps>,\n  ComponentType<IconProps>\n>();\n\nconst paddingByIconSize = {\n  18: 1,\n  24: 4,\n  36: 3,\n  48: 0,\n};\n\nconst createLayoutIcon = (iconComponent: ComponentType<IconProps>) =>\n  styled(iconComponent)<{ iconSize: ExactIconSize }>`\n    width: ${(props) =>\n      Number(props.iconSize) + 2 * paddingByIconSize[props.iconSize]}px;\n    height: ${(props) =>\n      Number(props.iconSize) + 2 * paddingByIconSize[props.iconSize]}px;\n    padding: ${(props) => paddingByIconSize[props.iconSize]}px;\n  `;\n\nexport const getMemoizedLayoutIcon = (\n  iconComponent: ComponentType<IconProps>,\n) => {\n  if (!layoutIcons.has(iconComponent)) {\n    const newIcon = createLayoutIcon(iconComponent);\n    layoutIcons.set(iconComponent, newIcon);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return layoutIcons.get(iconComponent)!;\n};\n\ntype ExactIconSize = '18' | '24' | '36' | '48';\n\nexport interface LayoutIconProps extends Omit<IconProps, 'size'> {\n  iconSize: ExactIconSize;\n  iconComponent: ComponentType<IconProps>;\n}\n\n/**\n * Component that tweaks existing icon components.\n * It resizes icons to match industry standard size and adds extra padding in order to align with\n * design system layout tokens.\n * @experimental Use it carefully, please report any feedback to #design-system channel.\n * Please note that this may break the layout if non-standard spacing is provided in the theme.\n * @param iconComponent the original icon component to tweak. All props will be passed to it.\n */\n// eslint-disable-next-line react/prefer-stateless-function\nexport class LayoutIcon extends Component<LayoutIconProps> {\n  /**\n   * If you wonder why this is an old-fashioned class function, it is due to styled components:\n   * https://github.com/styled-components/styled-components/blob/061736aa6dbaf8e21168db1c07bb2d061d9f2546/packages/styled-components/src/utils/checkDynamicCreation.ts#L35\n   * They warn about dynamic component creation to early prevent common mistake that developers make.\n   * We want to create them lazily (with memoization) since we don't want to depend statically on any icon.\n   * We also don't want to affect official API since this component is experimental only.\n   */\n  override render() {\n    const { iconComponent, ...rest } = this.props;\n    return createElement(getMemoizedLayoutIcon(iconComponent), rest);\n  }\n}\n"],"mappings":";AAAA;AACA,SAASA,SAAS,EAAiBC,aAAa,QAAQ,OAAO;AAC/D,OAAOC,MAAM,MAAM,mBAAmB;AAItC,MAAMC,WAAW,GAAG,IAAIC,GAAG,EAGxB;AAEH,MAAMC,iBAAiB,GAAG;EACxB,EAAE,EAAE,CAAC;EACL,EAAE,EAAE,CAAC;EACL,EAAE,EAAE,CAAC;EACL,EAAE,EAAE;CACL;AAED,MAAMC,gBAAgB,GAAIC,aAAuC,IAC/DL,MAAM,CAACK,aAAa,CAA8B;aACtCC,KAAK,IACbC,MAAM,CAACD,KAAK,CAACE,QAAQ,CAAC,GAAG,CAAC,GAAGL,iBAAiB,CAACG,KAAK,CAACE,QAAQ,CAAC;cACrDF,KAAK,IACdC,MAAM,CAACD,KAAK,CAACE,QAAQ,CAAC,GAAG,CAAC,GAAGL,iBAAiB,CAACG,KAAK,CAACE,QAAQ,CAAC;eACpDF,KAAK,IAAKH,iBAAiB,CAACG,KAAK,CAACE,QAAQ,CAAC;GACxD;AAEH,OAAO,MAAMC,qBAAqB,GAChCJ,aAAuC,IACrC;EACF,IAAI,CAACJ,WAAW,CAACS,GAAG,CAACL,aAAa,CAAC,EAAE;IACnC,MAAMM,OAAO,GAAGP,gBAAgB,CAACC,aAAa,CAAC;IAC/CJ,WAAW,CAACW,GAAG,CAACP,aAAa,EAAEM,OAAO,CAAC;;EAEzC;EACA,OAAOV,WAAW,CAACY,GAAG,CAACR,aAAa,CAAE;AACxC,CAAC;AASD;;;;;;;;AAQA;AACA,OAAM,MAAOS,UAAW,SAAQhB,SAA0B;EACxD;;;;;;;EAOSiB,MAAMA,CAAA;IACb,MAAMC,EAAA,GAA6B,IAAI,CAACV,KAAK;MAAvC;QAAED;MAAa,IAAAW,EAAwB;MAAnBC,IAAI,GAAAC,MAAA,CAAAF,EAAA,EAAxB,iBAA0B,CAAa;IAC7C,OAAOjB,aAAa,CAACU,qBAAqB,CAACJ,aAAa,CAAC,EAAEY,IAAI,CAAC;EAClE"},"metadata":{},"sourceType":"module","externalDependencies":[]}