{"ast":null,"code":"var _jsxFileName = \"/home/angela/Development/code/flask/blog_app_project/client/src/components/AddCategory.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { retrieve } from \"../Encryption\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCategory = ({\n  setCategories,\n  categories\n}) => {\n  _s();\n  const [formData, setFormData] = useState(null);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newCategoryDesc, setNewCategoryDesc] = useState(\"\");\n  const addCategory = () => {\n    if (newCategory && newCategoryDesc) {}\n    fetch(\"/categories\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + retrieve().access_token\n      },\n      body: JSON.stringify(formData)\n    }).then(resp => resp.json()).then(data => {\n      setCategories(...categories, data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addCategory,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new_category\",\n        children: \"New Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"new_category\",\n        placeholder: \"Enter New Category\",\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new_category_description\",\n        children: \"New Category Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newCategoryDesc,\n        onChange: e => setNewCategoryDesc(e.target.value),\n        id: \"description\",\n        placeholder: \"Enter Category Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save New Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AddCategory, \"5Vovk4jGJ95/mQg6cz0lSUQrPtc=\");\n_c = AddCategory;\nexport default AddCategory;\nvar _c;\n$RefreshReg$(_c, \"AddCategory\");","map":{"version":3,"names":["React","useState","retrieve","jsxDEV","_jsxDEV","AddCategory","setCategories","categories","_s","formData","setFormData","newCategory","setNewCategory","newCategoryDesc","setNewCategoryDesc","addCategory","fetch","method","headers","Authorization","access_token","body","JSON","stringify","then","resp","json","data","catch","error","console","log","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/angela/Development/code/flask/blog_app_project/client/src/components/AddCategory.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { retrieve } from \"../Encryption\";\n\nconst AddCategory = ({ setCategories, categories }) => {\n  const [formData, setFormData] = useState(null);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newCategoryDesc, setNewCategoryDesc] = useState(\"\");\n\n  const addCategory = () => {\n    if(newCategory&&newCategoryDesc){\n        \n    }\n    fetch(\"/categories\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + retrieve().access_token,\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        setCategories(...categories, data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  return (\n    <div>\n      <form onSubmit={addCategory}>\n        <label htmlFor=\"new_category\">New Category</label>\n        <input\n          type=\"text\"\n          id=\"new_category\"\n          placeholder=\"Enter New Category\"\n          value={newCategory}\n          onChange={(e) => setNewCategory(e.target.value)}\n        ></input>\n        <br></br>\n        <label htmlFor=\"new_category_description\">\n          New Category Description\n        </label>\n        <input\n          type=\"text\"\n          value={newCategoryDesc}\n          onChange={(e) => setNewCategoryDesc(e.target.value)}\n          id=\"description\"\n          placeholder=\"Enter Category Description\"\n        ></input>\n        <br></br>\n        <button type=\"submit\">Save New Category</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddCategory;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}