{"ast":null,"code":"var _jsxFileName = \"/home/angela/Development/code/flask/blog_app_project/client/src/components/UpdatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePost = ({\n  blogPosts,\n  setBlogPosts\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [updatedPost, setUpdatedPost] = useState({});\n  useEffect(() => {\n    // Check if blogPosts is an array before using map\n    if (Array.isArray(blogPosts)) {\n      const updatedPosts = blogPosts.map(post => post.id === id ? {\n        ...post,\n        ...updatedPost\n      } : post);\n      fetch(`/blogs/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedPost)\n      }).then(resp => resp.json()).then(() => {\n        setBlogPosts(updatedPosts);\n      });\n    }\n  }, [id, blogPosts, setBlogPosts, updatedPost]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n_s(UpdatePost, \"/sDVAVZpe+aShi0g0O0cByBf588=\", false, function () {\n  return [useParams];\n});\n_c = UpdatePost;\nexport default UpdatePost;\nvar _c;\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","UpdatePost","blogPosts","setBlogPosts","_s","id","updatedPost","setUpdatedPost","Array","isArray","updatedPosts","map","post","fetch","method","headers","body","JSON","stringify","then","resp","json","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/angela/Development/code/flask/blog_app_project/client/src/components/UpdatePost.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst UpdatePost = ({ blogPosts, setBlogPosts }) => {\n  const { id } = useParams();\n  const [updatedPost, setUpdatedPost] = useState({});\n\n  useEffect(() => {\n    // Check if blogPosts is an array before using map\n    if (Array.isArray(blogPosts)) {\n      const updatedPosts = blogPosts.map((post) =>\n        post.id === id ? { ...post, ...updatedPost } : post\n      );\n\n      fetch(`/blogs/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedPost),\n      })\n        .then((resp) => resp.json())\n        .then(() => {\n          setBlogPosts(updatedPosts);\n        });\n    }\n  }, [id, blogPosts, setBlogPosts, updatedPost]);\n\n  return <div></div>;\n};\n\nexport default UpdatePost;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd;IACA,IAAIY,KAAK,CAACC,OAAO,CAACP,SAAS,CAAC,EAAE;MAC5B,MAAMQ,YAAY,GAAGR,SAAS,CAACS,GAAG,CAAEC,IAAI,IACtCA,IAAI,CAACP,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGO,IAAI;QAAE,GAAGN;MAAY,CAAC,GAAGM,IACjD,CAAC;MAEDC,KAAK,CAAE,UAASR,EAAG,EAAC,EAAE;QACpBS,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,WAAW;MAClC,CAAC,CAAC,CACCa,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAC,MAAM;QACVhB,YAAY,CAACO,YAAY,CAAC;MAC5B,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACL,EAAE,EAAEH,SAAS,EAAEC,YAAY,EAAEG,WAAW,CAAC,CAAC;EAE9C,oBAAON,OAAA;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AACpB,CAAC;AAACrB,EAAA,CA1BIH,UAAU;EAAA,QACCH,SAAS;AAAA;AAAA4B,EAAA,GADpBzB,UAAU;AA4BhB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}