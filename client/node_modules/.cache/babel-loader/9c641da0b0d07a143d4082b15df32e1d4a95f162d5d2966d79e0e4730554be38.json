{"ast":null,"code":"var _jsxFileName = \"/home/angela/Development/code/flask/blog_app_project/client/src/components/UpdatePost.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePost = ({\n  blogPosts,\n  setBlogPosts\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [updatedPost, setUpdatedPost] = useState({\n    title: \"\",\n    excerpt: \"\",\n    content: \"\"\n  });\n  useEffect(() => {}, []);\n  const handleEditClick = () => {\n    const postId = id;\n    console.log(postId);\n    const loggedInUserId = parseInt(localStorage.getItem(\"user\").id);\n    const post = blogPosts.find(post => post.user_id === loggedInUserId);\n    if (!post) {\n      console.error(\"Post not found\");\n      return;\n    }\n    fetch(`/blogs/${postId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(post)\n    }).then(resp => resp.json()).then(() => {\n      const updatedPosts = [...blogPosts];\n      updatedPosts[updatedPostIndex] = updatedPostData;\n      setBlogPosts(updatedPosts);\n      setUpdatedPost({\n        title: \"\",\n        excerpt: \"\",\n        content: \"\"\n      });\n    }).catch(error => {\n      console.error(\"Error updating post:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit_post\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"title\",\n      name: \"title\",\n      type: \"text\",\n      value: updatedPost.title,\n      onChange: e => setUpdatedPost({\n        ...updatedPost,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Excerpt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"excerpt\",\n      name: \"excerpt\",\n      type: \"text\",\n      value: updatedPost.excerpt,\n      onChange: e => setUpdatedPost({\n        ...updatedPost,\n        excerpt: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"content\",\n      name: \"content\",\n      type: \"text\",\n      value: updatedPost.content,\n      onChange: e => setUpdatedPost({\n        ...updatedPost,\n        content: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditClick,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdatePost, \"Yzue9tX7/Pjq76OqxCAz7lol4dQ=\", false, function () {\n  return [useParams];\n});\n_c = UpdatePost;\nexport default UpdatePost;\nvar _c;\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","UpdatePost","blogPosts","setBlogPosts","_s","id","updatedPost","setUpdatedPost","title","excerpt","content","useEffect","handleEditClick","postId","console","log","loggedInUserId","parseInt","localStorage","getItem","post","find","user_id","error","fetch","method","headers","body","JSON","stringify","then","resp","json","updatedPosts","updatedPostIndex","updatedPostData","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/angela/Development/code/flask/blog_app_project/client/src/components/UpdatePost.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst UpdatePost = ({ blogPosts, setBlogPosts }) => {\n    const { id } = useParams();\n    const [updatedPost, setUpdatedPost] = useState({\n        title: \"\",\n        excerpt: \"\",\n        content: \"\",\n    });\n\n    useEffect(()=>{},[])\n\n    const handleEditClick = () => {\n        const postId = id; \n        console.log(postId)\n        const loggedInUserId = parseInt(localStorage.getItem(\"user\").id);\n        const post = blogPosts.find((post) => post.user_id === loggedInUserId);\n        \n        if (!post) {\n            console.error(\"Post not found\");\n            return;\n        }\n           \n       \n      \n        \n        fetch(`/blogs/${postId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(post),\n        })\n        .then((resp) => resp.json())\n        .then(() => {\n            const updatedPosts = [...blogPosts];\n            updatedPosts[updatedPostIndex] = updatedPostData;\n            setBlogPosts(updatedPosts);\n            setUpdatedPost({\n                title: \"\",\n                excerpt: \"\",\n                content: \"\",\n            });\n        })\n        .catch((error) => {\n            console.error(\"Error updating post:\", error);\n        });\n    };\n    \n    \n\n    return (\n        <div className='edit_post'>\n            <label>Title</label>\n            <input\n                id=\"title\"\n                name=\"title\"\n                type=\"text\"\n                value={updatedPost.title}\n                onChange={(e) => setUpdatedPost({ ...updatedPost, title: e.target.value })}\n            />\n             <label>Excerpt</label>\n            <input\n                id=\"excerpt\"\n                name=\"excerpt\"\n                type=\"text\"\n                value={updatedPost.excerpt}\n                onChange={(e) => setUpdatedPost({ ...updatedPost, excerpt: e.target.value })}\n            />\n             <label>Content</label>\n            <input\n                id=\"content\"\n                name=\"content\"\n                type=\"text\"\n                value={updatedPost.content}\n                onChange={(e) => setUpdatedPost({ ...updatedPost, content: e.target.value })}\n            />\n            <button onClick={handleEditClick}>Save</button>\n        </div>\n    );\n};\n\nexport default UpdatePost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}