{"ast":null,"code":"var _jsxFileName = \"/home/angela/Development/code/flask/blog_app_project/client/src/components/UpdatePost.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { retrieve } from \"../Encryption\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePost = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [categories, setCategories] = useState(null);\n  const {\n    id\n  } = useParams();\n  const user = retrieve();\n  const [updatedPost, setUpdatedPost] = useState({\n    title: \"\",\n    excerpt: \"\",\n    content: \"\",\n    category: null\n  });\n  useEffect(() => {\n    fetch(`/blogs/${id}`).then(resp => resp.json()).then(blog => {\n      setUpdatedPost({\n        title: blog.title,\n        excerpt: blog.excerpt,\n        content: blog.content,\n        category: blog.category\n      });\n      categoryData();\n    }).catch(error => {\n      console.log(\"error fetching data\", error);\n    });\n  }, []);\n  const handleEditClick = () => {\n    fetch(`/blogs/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + retrieve().access_token\n      },\n      body: JSON.stringify(updatedPost)\n    }).then(resp => resp.json()).then(data => {\n      const blogId = data.id;\n      const formData = new FormData();\n      formData.append(\"file\", fileUpload);\n      formData.append(\"description\", \"\");\n      fetch(`/upload/${blogId}`, {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": \"Bearer \" + retrieve().access_token\n        },\n        body: formData\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n      });\n      navigate(\"/profile_page\");\n    }).catch(error => {\n      console.error(\"Error updating post:\", error);\n    });\n  };\n  function categoryData() {\n    fetch(\"/categories\").then(resp => resp.json()).then(data => setCategories(data));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit_post\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"category\",\n      value: updatedPost.category,\n      onChange: e => {\n        setSelectedCategory(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: null,\n        children: \"Select Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), categories && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: category.name,\n        children: category.name\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"title\",\n      name: \"title\",\n      rows: \"10\",\n      cols: \"30\",\n      value: updatedPost.title,\n      onChange: e => setUpdatedPost({\n        ...updatedPost,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Excerpt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"excerpt\",\n      name: \"excerpt\",\n      rows: \"10\",\n      cols: \"30\",\n      value: updatedPost.excerpt,\n      onChange: e => setUpdatedPost({\n        ...updatedPost,\n        excerpt: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"content\",\n      name: \"content\",\n      rows: \"10\",\n      cols: \"30\",\n      value: updatedPost.content,\n      onChange: e => setUpdatedPost({\n        ...updatedPost,\n        content: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleEditClick(),\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdatePost, \"BZn43eBKfMq/x2DVAdmhB7tDCrM=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = UpdatePost;\nexport default UpdatePost;\nvar _c;\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","retrieve","jsxDEV","_jsxDEV","UpdatePost","_s","navigate","selectedCategory","setSelectedCategory","categories","setCategories","id","user","updatedPost","setUpdatedPost","title","excerpt","content","category","fetch","then","resp","json","blog","categoryData","catch","error","console","log","handleEditClick","method","headers","access_token","body","JSON","stringify","data","blogId","formData","FormData","append","fileUpload","res","className","children","name","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","rows","cols","onClick","_c","$RefreshReg$"],"sources":["/home/angela/Development/code/flask/blog_app_project/client/src/components/UpdatePost.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { retrieve } from \"../Encryption\";\n\n\nconst UpdatePost = () => {\n  const navigate = useNavigate();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const[ categories,setCategories]=useState(null)\n  const {id}=useParams()\n  const user = retrieve()\n  const [updatedPost, setUpdatedPost] = useState({\n    title: \"\",\n    excerpt: \"\",\n    content: \"\",\n    category:null\n   \n  });\n\n  useEffect(()=>{\n    fetch(`/blogs/${id}`)\n      .then((resp) => resp.json())\n      .then((blog) => {\n       \n        setUpdatedPost({\n            title:blog.title,\n            excerpt:blog.excerpt,\n            content:blog.content,\n            category:blog.category\n        })\n      categoryData()\n      })\n      .catch((error) => {\n        console.log(\"error fetching data\", error);\n      });\n  },[])\n\n  const handleEditClick = () => {\n    fetch(`/blogs/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\":\"Bearer \"+ retrieve().access_token\n      },\n      body: JSON.stringify(updatedPost),\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n      \n       const blogId=data.id\n       const formData = new FormData();\n       formData.append(\"file\", fileUpload);\n       formData.append(\"description\", \"\");\n     \n       fetch(`/upload/${blogId}`, {\n         method: \"POST\",\n         headers:{\"Authorization\": \"Bearer \" + retrieve().access_token},\n         body: formData,\n       })\n         .then((res) => res.json())\n         .then((data) => {\n           console.log(data);\n         });\n       navigate(\"/profile_page\");\n      })\n      .catch((error) => {\n        console.error(\"Error updating post:\", error);\n      });\n  };\n  function categoryData() {\n    fetch(\"/categories\") \n      .then((resp) => resp.json())\n      .then((data) => setCategories(data));\n  }\n\n \n  \n\n  return (\n    <div className=\"edit_post\">\n      <select\n  name=\"category\"\n  value={updatedPost.category}\n  onChange={(e) => {  \n    setSelectedCategory(e.target.value);\n  }}\n>        \n            <option value={null}>\n              Select Category\n            </option>\n            {categories && \n              categories.map((category) => (\n                <option key={category.id} value={category.name}>\n                  {category.name}\n                </option>\n              ))}\n          </select>\n      <label>Title</label>\n      <textarea\n        id=\"title\"\n        name=\"title\"\n        rows=\"10\"\n        cols=\"30\"\n        value={updatedPost.title}\n        onChange={(e) =>\n          setUpdatedPost({ ...updatedPost, title: e.target.value })\n        }\n      ></textarea>\n      <label>Excerpt</label>\n      <textarea\n        id=\"excerpt\"\n        name=\"excerpt\"\n        rows=\"10\"\n        cols=\"30\"\n        value={updatedPost.excerpt}\n        onChange={(e) =>\n          setUpdatedPost({ ...updatedPost, excerpt: e.target.value })\n        }\n      ></textarea>\n      <label>Content</label>\n      <textarea\n        id=\"content\"\n        name=\"content\"\n        rows=\"10\"\n        cols=\"30\"\n        value={updatedPost.content}\n        onChange={(e) =>\n          setUpdatedPost({ ...updatedPost, content: e.target.value })\n        }\n      ></textarea>\n      <button onClick={() => handleEditClick()}>Save</button>\n    </div>\n  );\n};\n\nexport default UpdatePost;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}