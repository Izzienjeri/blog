{"ast":null,"code":"var _jsxFileName = \"/home/angela/Development/code/flask/blog_app_project/client/src/components/AddPost.js\",\n  _s = $RefreshSig$();\nimport { useFormik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { retrieve, store } from \"../Encryption\";\nimport AddCategory from \"./AddCategory\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPost = ({\n  setPosts,\n  fetchBlogPosts\n}) => {\n  _s();\n  const [fileUpload, setFileUpload] = useState(null);\n  const [image, setImage] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [categories, setCategories] = useState(null);\n  const [categoryShown, setCategoryShown] = useState(false);\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      excerpt: \"\",\n      content: \"\",\n      category: selectedCategory\n    },\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      if (fileUpload) {\n        const data = values;\n        console.log(\"FD: \", data);\n        postBlog(data);\n        resetForm();\n      } else {\n        alert(\"Please include an image to upload\");\n      }\n    }\n  });\n  useEffect(() => {\n    categoryData();\n  }, []);\n  function postBlog(data) {\n    fetch(\"/blogs\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + retrieve().access_token\n      },\n      body: JSON.stringify(data)\n    }).then(resp => resp.json()).then(data => {\n      setPosts(data);\n      console.log(\"DATA: \", data);\n      const id = data.id;\n      const formData = new FormData();\n      formData.append(\"file\", fileUpload);\n      formData.append(\"description\", \"\");\n      fetch(`/upload/${id}`, {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + retrieve().access_token\n        },\n        body: formData\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n      });\n      navigate(\"/profile_page\");\n      // fetchBlogPosts();\n    });\n  }\n  const handleChange = e => {\n    const file = e.target.files[0];\n    setFileUpload(file);\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setImage(reader.result);\n      console.log(image);\n    };\n  };\n  function categoryData() {\n    fetch(\"/categories\").then(resp => resp.json()).then(data => setCategories(data));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eight wide column\",\n      style: {\n        marginTop: '40px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui segment\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui teal button\",\n            style: {\n              marginBottom: '20px'\n            },\n            onClick: () => setCategoryShown(true),\n            children: \"Add New Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), categoryShown ? /*#__PURE__*/_jsxDEV(AddCategory, {\n          setCategories: setCategories,\n          categories: categories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 28\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eight wide column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui segment\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(AddPost, \"nXijaMoFyAu4SFHbBzWDKmzV9qk=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = AddPost;\nexport default AddPost;\nvar _c;\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"names":["useFormik","React","useEffect","useState","useNavigate","retrieve","store","AddCategory","jsxDEV","_jsxDEV","AddPost","setPosts","fetchBlogPosts","_s","fileUpload","setFileUpload","image","setImage","selectedCategory","setSelectedCategory","categories","setCategories","categoryShown","setCategoryShown","navigate","formik","initialValues","title","excerpt","content","category","onSubmit","values","resetForm","data","console","log","postBlog","alert","categoryData","fetch","method","headers","Authorization","access_token","body","JSON","stringify","then","resp","json","id","formData","FormData","append","res","handleChange","e","file","target","files","reader","FileReader","readAsDataURL","onloadend","result","className","children","style","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onClick","handleSubmit","_c","$RefreshReg$"],"sources":["/home/angela/Development/code/flask/blog_app_project/client/src/components/AddPost.js"],"sourcesContent":["import { useFormik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { retrieve, store } from \"../Encryption\";\nimport AddCategory from \"./AddCategory\";\nimport 'semantic-ui-css/semantic.min.css';\n\nconst AddPost = ({ setPosts, fetchBlogPosts }) => {\n  const [fileUpload, setFileUpload] = useState(null);\n  const [image, setImage] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [categories, setCategories] = useState(null);\n  const [categoryShown,setCategoryShown]=useState(false)\n\n  const navigate = useNavigate();\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      excerpt: \"\",\n      content: \"\",\n      category: selectedCategory,\n    },\n    onSubmit: (values, { resetForm }) => {\n      if (fileUpload) {\n        const data = values;\n\n        console.log(\"FD: \", data);\n        postBlog(data);\n        resetForm();\n      } else {\n        alert(\"Please include an image to upload\");\n      }\n    },\n  });\n\n  useEffect(() => {\n    categoryData();\n  }, []);\n\n  function postBlog(data) {\n    fetch(\"/blogs\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + retrieve().access_token,\n      },\n      body: JSON.stringify(data),\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        setPosts(data);\n        console.log(\"DATA: \", data);\n        const id = data.id;\n        const formData = new FormData();\n        formData.append(\"file\", fileUpload);\n        formData.append(\"description\", \"\");\n\n        fetch(`/upload/${id}`, {\n          method: \"POST\",\n          headers: { Authorization: \"Bearer \" + retrieve().access_token },\n          body: formData,\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            console.log(data);\n            \n          });\n        navigate(\"/profile_page\");\n        // fetchBlogPosts();\n      });\n  }\n\n  const handleChange = (e) => {\n    const file = e.target.files[0];\n    setFileUpload(file);\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setImage(reader.result);\n      console.log(image);\n    };\n  };\n\n  function categoryData() {\n    fetch(\"/categories\")\n      .then((resp) => resp.json())\n      .then((data) => setCategories(data));\n  }\n\n \n\n  return (\n    <div className=\"ui grid\">\n      {/* Left Column for Add Category */}\n      <div className=\"eight wide column\" style={{ marginTop: '40px' }}>\n        <h2>Add Category</h2>\n        <div className=\"ui segment\">\n          <div>\n            <button className=\"ui teal button\" style={{ marginBottom: '20px' }} onClick={() => setCategoryShown(true)}>\n              Add New Category\n            </button>\n          </div>\n          {categoryShown ? <AddCategory setCategories={setCategories} categories={categories} /> : \"\"}\n        </div>\n      </div>\n  \n      {/* Right Column for Add Post Form */}\n      <div className=\"eight wide column\">\n        <h2>Add Post</h2>\n        <div className=\"ui segment\">\n          <form onSubmit={formik.handleSubmit}>\n            {/* ... (your existing code for Add Post) */}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n  \n};\n\nexport default AddPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}