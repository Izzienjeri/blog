{"ast":null,"code":"var _jsxFileName = \"/home/angela/Development/code/flask/blog_app_project/client/src/components/SingleBlogPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport AddComment from \"./AddComment\";\nimport { retrieve } from \"../Encryption\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleBlogPage = ({\n  handleComment\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [blogPost, setBlogPost] = useState(null);\n  const [myComment, setMyComment] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    fetch(`/blogs/${id}`).then(resp => resp.json()).then(blog => {\n      setBlogPost(blog);\n    }).catch(error => {\n      console.log(\"error fetching blog post\", error);\n    });\n  }, [id]);\n  const handleUpdateComment = commentId => {\n    fetch(`/comments/${commentId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        content: myComment\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n    }).catch(err => {\n      throw new Error(err);\n    });\n  };\n  if (!blogPost) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: blogPost.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: blogPost.images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"blog-image\",\n        src: image.file_path,\n        alt: `${index + 1}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blogPost.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Post Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), blogPost.comments && blogPost.comments.length >= 1 ? blogPost.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.guest_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"5px\",\n            justifyContent: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), comment.user_id === retrieve().user_id ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsOpen(true),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this) : \"\", isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"newComment\",\n              name: \"newComment\",\n              value: myComment,\n              onChange: e => setMyComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              oncl: true,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Post Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AddComment, {\n        handleComment: handleComment,\n        blogPost: blogPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleBlogPage, \"doAzr5TPpsp1i7Th582aPmDbNhk=\", false, function () {\n  return [useParams];\n});\n_c = SingleBlogPage;\nexport default SingleBlogPage;\nvar _c;\n$RefreshReg$(_c, \"SingleBlogPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","AddComment","retrieve","jsxDEV","_jsxDEV","SingleBlogPage","handleComment","_s","id","blogPost","setBlogPost","myComment","setMyComment","isOpen","setIsOpen","fetch","then","resp","json","blog","catch","error","console","log","handleUpdateComment","commentId","method","headers","body","JSON","stringify","content","res","data","err","Error","children","fileName","_jsxFileName","lineNumber","columnNumber","title","className","images","map","image","index","src","file_path","alt","comments","length","comment","guest_name","style","display","alignItems","gap","justifyContent","user_id","onClick","name","value","onChange","e","target","oncl","_c","$RefreshReg$"],"sources":["/home/angela/Development/code/flask/blog_app_project/client/src/components/SingleBlogPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport AddComment from \"./AddComment\";\nimport { retrieve } from \"../Encryption\";\n\nconst SingleBlogPage = ({ handleComment }) => {\n  const { id } = useParams();\n  const [blogPost, setBlogPost] = useState(null);\n  const [myComment, setMyComment] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    fetch(`/blogs/${id}`)\n      .then((resp) => resp.json())\n      .then((blog) => {\n        setBlogPost(blog);\n      })\n      .catch((error) => {\n        console.log(\"error fetching blog post\", error);\n      });\n  }, [id]);\n\n  const handleUpdateComment = (commentId) => {\n    fetch(`/comments/${commentId}`, {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ content: myComment }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((err) => {\n        throw new Error(err);\n      });\n  };\n\n  if (!blogPost) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div>\n      <h2>{blogPost.title}</h2>\n\n      <div className=\"image-container\">\n        {blogPost.images.map((image, index) => (\n          <img\n            key={index}\n            className=\"blog-image\"\n            src={image.file_path}\n            alt={`${index + 1}`}\n          />\n        ))}\n      </div>\n\n      <div>\n        <p>{blogPost.content}</p>\n      </div>\n\n      <div>\n        <h2>Post Comments</h2>\n        {blogPost.comments && blogPost.comments.length >= 1 ? (\n          blogPost.comments.map((comment, index) => (\n            <div key={index}>\n              <p>{comment.guest_name}</p>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <p>{comment.content}</p>\n                {comment.user_id === retrieve().user_id ? (\n                  <button onClick={() => setIsOpen(true)}>\n                    Update\n                  </button>\n                ) : (\n                  \"\"\n                )}\n                {isOpen ? (\n                  <div>\n                    <input\n                      id=\"newComment\"\n                      name=\"newComment\"\n                      value={myComment}\n                      onChange={(e) => setMyComment(e.target.value)}\n                    />\n                    <button oncl>Save</button>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>No Post Comments</p>\n        )}\n      </div>\n\n      <div>\n        <AddComment handleComment={handleComment} blogPost={blogPost} />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleBlogPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,QAAQ,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACdiB,KAAK,CAAE,UAASP,EAAG,EAAC,CAAC,CAClBQ,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAEG,IAAI,IAAK;MACdT,WAAW,CAACS,IAAI,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAAC;IAChD,CAAC,CAAC;EACN,CAAC,EAAE,CAACb,EAAE,CAAC,CAAC;EAER,MAAMgB,mBAAmB,GAAIC,SAAS,IAAK;IACzCV,KAAK,CAAE,aAAYU,SAAU,EAAC,EAAE;MAC9BC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAEpB;MAAU,CAAC;IAC7C,CAAC,CAAC,CACCK,IAAI,CAAEgB,GAAG,IAAKA,GAAG,CAACd,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEiB,IAAI,IAAK;MACdX,OAAO,CAACC,GAAG,CAACU,IAAI,CAAC;IACnB,CAAC,CAAC,CACDb,KAAK,CAAEc,GAAG,IAAK;MACd,MAAM,IAAIC,KAAK,CAACD,GAAG,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EAED,IAAI,CAACzB,QAAQ,EAAE;IACb,oBAAOL,OAAA;MAAAgC,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,oBACEpC,OAAA;IAAAgC,QAAA,gBACEhC,OAAA;MAAAgC,QAAA,EAAK3B,QAAQ,CAACgC;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEzBpC,OAAA;MAAKsC,SAAS,EAAC,iBAAiB;MAAAN,QAAA,EAC7B3B,QAAQ,CAACkC,MAAM,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAChC1C,OAAA;QAEEsC,SAAS,EAAC,YAAY;QACtBK,GAAG,EAAEF,KAAK,CAACG,SAAU;QACrBC,GAAG,EAAG,GAAEH,KAAK,GAAG,CAAE;MAAE,GAHfA,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENpC,OAAA;MAAAgC,QAAA,eACEhC,OAAA;QAAAgC,QAAA,EAAI3B,QAAQ,CAACsB;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eAENpC,OAAA;MAAAgC,QAAA,gBACEhC,OAAA;QAAAgC,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrB/B,QAAQ,CAACyC,QAAQ,IAAIzC,QAAQ,CAACyC,QAAQ,CAACC,MAAM,IAAI,CAAC,GACjD1C,QAAQ,CAACyC,QAAQ,CAACN,GAAG,CAAC,CAACQ,OAAO,EAAEN,KAAK,kBACnC1C,OAAA;QAAAgC,QAAA,gBACEhC,OAAA;UAAAgC,QAAA,EAAIgB,OAAO,CAACC;QAAU;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3BpC,OAAA;UACEkD,KAAK,EAAE;YACLC,OAAO,EAAE,MAAM;YACfC,UAAU,EAAE,QAAQ;YACpBC,GAAG,EAAE,KAAK;YACVC,cAAc,EAAE;UAClB,CAAE;UAAAtB,QAAA,gBAEFhC,OAAA;YAAAgC,QAAA,EAAIgB,OAAO,CAACrB;UAAO;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACvBY,OAAO,CAACO,OAAO,KAAKzD,QAAQ,CAAC,CAAC,CAACyD,OAAO,gBACrCvD,OAAA;YAAQwD,OAAO,EAAEA,CAAA,KAAM9C,SAAS,CAAC,IAAI,CAAE;YAAAsB,QAAA,EAAC;UAExC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,GAET,EACD,EACA3B,MAAM,gBACLT,OAAA;YAAAgC,QAAA,gBACEhC,OAAA;cACEI,EAAE,EAAC,YAAY;cACfqD,IAAI,EAAC,YAAY;cACjBC,KAAK,EAAEnD,SAAU;cACjBoD,QAAQ,EAAGC,CAAC,IAAKpD,YAAY,CAACoD,CAAC,CAACC,MAAM,CAACH,KAAK;YAAE;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC,eACFpC,OAAA;cAAQ8D,IAAI;cAAA9B,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC,GAEN,EACD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA,GA/BEM,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgCV,CACN,CAAC,gBAEFpC,OAAA;QAAAgC,QAAA,EAAG;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACvB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENpC,OAAA;MAAAgC,QAAA,eACEhC,OAAA,CAACH,UAAU;QAACK,aAAa,EAAEA,aAAc;QAACG,QAAQ,EAAEA;MAAS;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjC,EAAA,CAvGIF,cAAc;EAAA,QACHL,SAAS;AAAA;AAAAmE,EAAA,GADpB9D,cAAc;AAyGpB,eAAeA,cAAc;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}