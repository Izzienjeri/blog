{"ast":null,"code":"var _jsxFileName = \"/home/angela/Development/code/flask/blog_app_project/client/src/components/SingleBlogPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport AddComment from \"./AddComment\";\nimport { retrieve } from \"../Encryption\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleBlogPage = ({\n  handleComment\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [blogPost, setBlogPost] = useState(null);\n  const [myComment, setMyComment] = useState(null);\n  useEffect(() => {\n    fetch(`/blogs/${id}`).then(resp => resp.json()).then(blog => {\n      setBlogPost(blog);\n    }).catch(error => {\n      console.log(\"error fetching blog post\", error);\n    });\n  }, [id]);\n  const handleUpdateComment = commentId => {\n    fetch(`/comments/${commentId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        content: myComment\n      })\n    }).then();\n  };\n  if (!blogPost) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: blogPost.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: blogPost.images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"blog-image\",\n        src: image.file_path,\n        alt: `${index + 1}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blogPost.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Post Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), blogPost.comments && blogPost.comments.length >= 1 ? blogPost.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.guest_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"5px\",\n            justifyContent: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), comment.user_id === retrieve().user_id ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdateComment(comment.id),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Post Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AddComment, {\n        handleComment: handleComment,\n        blogPost: blogPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleBlogPage, \"H9VAufGcOsE5cIGfqjQYuCJJEzM=\", false, function () {\n  return [useParams];\n});\n_c = SingleBlogPage;\nexport default SingleBlogPage;\nvar _c;\n$RefreshReg$(_c, \"SingleBlogPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","AddComment","retrieve","jsxDEV","_jsxDEV","SingleBlogPage","handleComment","_s","id","blogPost","setBlogPost","myComment","setMyComment","fetch","then","resp","json","blog","catch","error","console","log","handleUpdateComment","commentId","method","headers","body","JSON","stringify","content","children","fileName","_jsxFileName","lineNumber","columnNumber","title","className","images","map","image","index","src","file_path","alt","comments","length","comment","guest_name","style","display","alignItems","gap","justifyContent","user_id","onClick","_c","$RefreshReg$"],"sources":["/home/angela/Development/code/flask/blog_app_project/client/src/components/SingleBlogPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport AddComment from \"./AddComment\";\nimport { retrieve } from \"../Encryption\";\n\nconst SingleBlogPage = ({ handleComment }) => {\n  const { id } = useParams();\n  const [blogPost, setBlogPost] = useState(null);\n  const [myComment, setMyComment] = useState(null)\n\n  useEffect(() => {\n    fetch(`/blogs/${id}`)\n      .then((resp) => resp.json())\n      .then((blog) => {\n        setBlogPost(blog);\n      })\n      .catch((error) => {\n        console.log(\"error fetching blog post\", error);\n      });\n  }, [id]);\n\n  const handleUpdateComment = (commentId) => {\n    fetch(`/comments/${commentId}`, {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({content: myComment}),\n    }).then()\n  };\n\n  if (!blogPost) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div>\n      <h2>{blogPost.title}</h2>\n\n      <div className=\"image-container\">\n        {blogPost.images.map((image, index) => (\n          <img\n            key={index}\n            className=\"blog-image\"\n            src={image.file_path}\n            alt={`${index + 1}`}\n          />\n        ))}\n      </div>\n\n      <div>\n        <p>{blogPost.content}</p>\n      </div>\n\n      <div>\n        <h2>Post Comments</h2>\n        {blogPost.comments && blogPost.comments.length >= 1 ? (\n          blogPost.comments.map((comment, index) => (\n            <div key={index}>\n              <p>{comment.guest_name}</p>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"5px\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <p>{comment.content}</p>\n                {comment.user_id === retrieve().user_id ? (\n                  <button onClick={() => handleUpdateComment(comment.id)}>\n                    Update\n                  </button>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>No Post Comments</p>\n        )}\n      </div>\n\n      <div>\n        <AddComment handleComment={handleComment} blogPost={blogPost} />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleBlogPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}