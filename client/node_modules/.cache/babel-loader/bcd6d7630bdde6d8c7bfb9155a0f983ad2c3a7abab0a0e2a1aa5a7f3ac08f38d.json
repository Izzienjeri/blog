{"ast":null,"code":"var _jsxFileName = \"/home/angela/Development/code/flask/blog_app_project/client/src/components/ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentUser, setcurrentUser] = useState(null);\n  const [blogs, setBlogs] = useState([]);\n  useEffect(() => {\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      setcurrentUser(JSON.parse(user));\n    } else {\n      setcurrentUser(null);\n    }\n\n    // Function to fetch blogs\n    const fetchBlogs = () => {\n      fetch(\"/blogs\").then(resp => resp.json()).then(blogs => {\n        console.log(blogs);\n        setBlogs(blogs.filter(blog => blog.user_id === JSON.parse(user).id) || []);\n      }).catch(error => {\n        console.log(\"error fetching data\", error);\n      });\n    };\n\n    // Fetch blogs initially\n    fetchBlogs();\n  }, []);\n  function deletePost(myId) {\n    fetch(`/blogs/${myId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => {\n      // Refetch blogs after successful deletion\n      fetchBlogs();\n    }).catch(error => {\n      console.error(\"Error deleting post\", error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", currentUser.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", currentUser.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", currentUser.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Blogs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), blogs.length > 1 ? blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: blog.excerpt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: blog.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(`/update_blog/${blog.id}`),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePost(blog.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, blog.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No existing Blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"WF50kPN1RK784f8Acg3+vxaIzyA=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","ProfilePage","_s","navigate","currentUser","setcurrentUser","blogs","setBlogs","user","localStorage","getItem","JSON","parse","fetchBlogs","fetch","then","resp","json","console","log","filter","blog","user_id","id","catch","error","deletePost","myId","method","headers","children","username","fileName","_jsxFileName","lineNumber","columnNumber","email","length","map","title","excerpt","content","onClick","_c","$RefreshReg$"],"sources":["/home/angela/Development/code/flask/blog_app_project/client/src/components/ProfilePage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ProfilePage = () => {\n  const navigate = useNavigate();\n  const [currentUser, setcurrentUser] = useState(null);\n  const [blogs, setBlogs] = useState([]);\n\n  useEffect(() => {\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      setcurrentUser(JSON.parse(user));\n    } else {\n      setcurrentUser(null);\n    }\n\n    // Function to fetch blogs\n    const fetchBlogs = () => {\n      fetch(\"/blogs\")\n        .then((resp) => resp.json())\n        .then((blogs) => {\n          console.log(blogs);\n          setBlogs(blogs.filter((blog) => blog.user_id === JSON.parse(user).id) || []);\n        })\n        .catch((error) => {\n          console.log(\"error fetching data\", error);\n        });\n    };\n\n    // Fetch blogs initially\n    fetchBlogs();\n  }, []);\n\n  function deletePost(myId) {\n    fetch(`/blogs/${myId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(() => {\n        // Refetch blogs after successful deletion\n        fetchBlogs();\n      })\n      .catch((error) => {\n        console.error(\"Error deleting post\", error);\n      });\n  }\n\n  return (\n    <div>\n      {currentUser ? (\n        <div>\n          <h2>Welcome, {currentUser.username}!</h2>\n          <p>User Details:</p>\n          <p>Username: {currentUser.username}</p>\n          <p>Email: {currentUser.email}</p>\n          <button>Update Password</button>\n\n          <h3>Your Blogs:</h3>\n          {blogs.length > 1 ? (\n            blogs.map((blog) => (\n              <div key={blog.id}>\n                <h4>{blog.title}</h4>\n                <h6>{blog.excerpt}</h6>\n                <p>{blog.content}</p>\n                <button onClick={() => navigate(`/update_blog/${blog.id}`)}>\n                  Update\n                </button>\n                <button onClick={()=>deletePost(blog.id)}>Delete</button>\n              </div>\n            ))\n          ) : (\n            <p>No existing Blogs</p>\n          )}\n        </div>\n      ) : (\n        <div></div>\n      )}\n      <button>Add a New Post</button>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}